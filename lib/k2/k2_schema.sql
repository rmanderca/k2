exec drop_table('api_token');

-- ToDo: Part of install needs to clean up orphan recs in this table since we 
-- can't have a fk on saas_auth since some cookies may be session level only.

-- uninstall: exec drop_table('cookie');
begin
   if not does_table_exist('cookie') then 
      execute_sql('
      create table cookie (
         id number generated by default on null as identity cache 20 noorder nocycle nokeep noscale not null,
         user_id number not null,
         user_name varchar2(120) default null,
         session_id number default null,
         cookie_name varchar2(120),
         cookie_value varchar2(1200),
         created_at date default sysdate,
         expires_at date default null
         )', false);
   end if;
   if not does_constraint_exist('pk_cookie_id') then 
      execute_sql(
         'alter table cookie add constraint pk_cookie_id primary key (id)', false);
   end if;
end;
/

-- uninstall: exec drop_table('flash_message');
begin
   if not does_table_exist('flash_message') then 
      execute_sql('
      create table flash_message (
         id number generated by default on null as identity cache 20 noorder nocycle nokeep noscale not null,
         message_type varchar2(120) default ''notice'' not null,
         user_name varchar2(120) default null,
         session_id number default null,
         message varchar2(1200),
         created_at date default sysdate,
         expires_at date default null
         )', false);
   end if;
   if not does_constraint_exist('pk_flash_message_id') then 
      execute_sql(
         'alter table flash_message add constraint pk_flash_message_id primary key (id)', false);
   end if;
   if not does_index_exist('flash_message_2') then 
      execute_sql(
         'create index flash_message_2 on flash_message(message_type)', false);
   end if;
   if not does_index_exist('flash_message_3') then 
      execute_sql(
         'create index flash_message_3 on flash_message(session_id)', false);
   end if;
   if not does_column_exist('flash_message', 'user_name') then 
      execute_sql(
         'alter table flash_message add (user_name varchar2(120) default null)', false);
   end if;
   -- We don't need this column. We may flash a message based on session id and not have an account associated with the session.
   if does_column_exist('flash_message', 'user_id') then 
      execute_sql(
         'alter table flash_message drop column user_id', false);
   end if;
end;
/

-- uninstall: exec drop_view('user_flash_message');
create or replace view user_flash_message as (
    select * from flash_message
     where (user_name=lower(v('APP_USER'))
        or session_id=v('APP_SESSION'))
       and (expires_at<=sysdate
        or expires_at is null));


